pipeline {
  agent {
    docker {
      image "maven:3.9.6-eclipse-temurin-17"
      args "--user root -v /var/run/docker.sock:/var/run/docker.sock"
    }
  }

  environment {
    SONAR_URL = "http://54.82.119.108:9000"
    DOCKER_IMAGE = "aishuvthija/ultimate-cicd:${BUILD_NUMBER}"
    REGISTRY_CREDENTIALS = 'dockerhub-pat' // ðŸŸ¢ PAT stored as Secret Text in Jenkins
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "Aishuvthija"
  }

  stages {
    stage('Build and Test') {
      steps {
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: "sonarqube", variable: "SONAR_AUTH_TOKEN")]) {
          sh """
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \\
              -Dsonar.token=${SONAR_AUTH_TOKEN} \\
              -Dsonar.host.url=${SONAR_URL}
          """
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh """
            apt-get update && apt-get install -y docker.io
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          """
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CREDENTIALS) {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: "github", variable: "GITHUB_TOKEN")]) {
          sh """
            git config user.email "aishuvthija@gmail.com"
            git config user.name "Aishuvthija"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          """
        }
      }
    }
  }
}
